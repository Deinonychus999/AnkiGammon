name: Build and Release

# Only runs when you publish a GitHub Release (not on every commit)
# To trigger: GitHub → Releases → Draft a new release → Publish
on:
  release:
    types: [published]

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python --version
          pip install .
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: pyinstaller ankigammon.spec

      - name: Create ZIP archive
        run: |
          cd dist
          Compress-Archive -Path ankigammon.exe -DestinationPath ankigammon-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ankigammon-windows
          path: dist/ankigammon-windows.zip
          retention-days: 7

  build-macos:
    name: Build macOS DMG
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python --version
          pip install .
          pip install pyinstaller
          brew install create-dmg

      - name: Build app bundle with PyInstaller
        run: pyinstaller ankigammon.spec

      - name: Ad-hoc sign app bundle (Apple Silicon compatibility)
        run: |
          codesign -s - --force --deep "dist/AnkiGammon.app"

      - name: Create DMG
        run: |
          create-dmg \
            --volname "AnkiGammon" \
            --volicon "ankigammon/gui/resources/icon.icns" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "AnkiGammon.app" 175 120 \
            --hide-extension "AnkiGammon.app" \
            --app-drop-link 425 120 \
            "dist/AnkiGammon-macOS.dmg" \
            "dist/AnkiGammon.app" || true

      - name: Verify DMG was created
        run: ls -lh dist/*.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ankigammon-macos
          path: dist/AnkiGammon-macOS.dmg
          retention-days: 7

  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python --version
          pip install .
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: pyinstaller ankigammon.spec

      - name: Download linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage

      - name: Create AppDir structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp dist/ankigammon AppDir/usr/bin/
          cp ankigammon/gui/resources/icon.png AppDir/usr/share/icons/hicolor/256x256/apps/ankigammon.png

      - name: Create desktop entry
        run: |
          cat > AppDir/usr/share/applications/ankigammon.desktop << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=AnkiGammon
          Exec=ankigammon
          Icon=ankigammon
          Categories=Education;
          Comment=Convert eXtreme Gammon analysis to Anki flashcards
          EOF

      - name: Build AppImage
        run: |
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage

      - name: Verify AppImage
        run: |
          ls -lh *.AppImage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ankigammon-linux
          path: "AnkiGammon-x86_64.AppImage"
          retention-days: 7

  create-release:
    name: Create GitHub Release
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: ankigammon-windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ankigammon-macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ankigammon-linux

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ankigammon-windows.zip
            AnkiGammon-macOS.dmg
            AnkiGammon-x86_64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
